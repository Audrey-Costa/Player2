generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("POSTGRESS_URL")
}

model Users {
  id                              Int           @id @default(autoincrement())
  firstName                       String
  lastName                        String
  age                             Int
  email                           String        @unique
  password                        String
  description                     String        @default("")
  Friends_Friends_friendIdToUsers Friends[]     @relation("Friends_friendIdToUsers")
  Friends_Friends_userIdToUsers   Friends[]     @relation("Friends_userIdToUsers")
  Likes_Likes_friendIdToUsers     Likes[]       @relation("Likes_friendIdToUsers")
  Likes_Likes_userIdToUsers       Likes[]       @relation("Likes_userIdToUsers")
  preferences                     Preferences[]
}

model Preferences {
  id       Int     @id @default(autoincrement())
  userId   Int     @unique
  ageRange String
  focus    Focus   @default(casual)
  users    Users   @relation(fields: [userId], references: [id])
  games    Games[]
}

model Games {
  id            Int         @id @default(autoincrement())
  preferencesId Int
  gameName      String
  gameImage     String
  preferences   Preferences @relation(fields: [preferencesId], references: [id])
}

model Friends {
  id                            Int   @id @default(autoincrement())
  userId                        Int
  friendId                      Int
  Users_Friends_friendIdToUsers Users @relation("Friends_friendIdToUsers", fields: [friendId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Users_Friends_userIdToUsers   Users @relation("Friends_userIdToUsers", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model Likes {
  id                          Int   @id @default(autoincrement())
  userId                      Int
  friendId                    Int
  Users_Likes_friendIdToUsers Users @relation("Likes_friendIdToUsers", fields: [friendId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  Users_Likes_userIdToUsers   Users @relation("Likes_userIdToUsers", fields: [userId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum Focus {
  competitive
  casual
}
